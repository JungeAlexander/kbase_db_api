"""Initial migration

Revision ID: 04a5bea10ab5
Revises:
Create Date: 2020-10-11 09:26:55.576442

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "04a5bea10ab5"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "documents",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("version", sa.String(), nullable=True),
        sa.Column("source", sa.String(), nullable=True),
        sa.Column("journal", sa.String(), nullable=True),
        sa.Column("document_type", sa.String(), nullable=True),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("publication_date", sa.Date(), nullable=True),
        sa.Column("update_date", sa.Date(), nullable=True),
        sa.Column("modified_date", sa.DateTime(), nullable=True),
        sa.Column("urls", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column("pmid", sa.Integer(), nullable=True),
        sa.Column("arxiv_id", sa.String(), nullable=True),
        sa.Column("license", sa.String(), nullable=True),
        sa.Column("doi", sa.String(), nullable=True),
        sa.Column("summary", sa.String(), nullable=True),
        sa.Column("full_text", sa.String(), nullable=True),
        sa.Column(
            "authors", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True
        ),
        sa.Column(
            "affiliations", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True
        ),
        sa.Column("language", sa.String(), nullable=True),
        sa.Column(
            "keywords", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True
        ),
        sa.Column(
            "in_citations", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True
        ),
        sa.Column(
            "out_citations", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True
        ),
        sa.Column("tags", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
        sa.Column(
            "other_ids", postgresql.ARRAY(sa.String(), dimensions=1), nullable=True
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_documents_id"), "documents", ["id"], unique=False)
    op.create_index(
        op.f("ix_documents_modified_date"), "documents", ["modified_date"], unique=False
    )
    op.create_index(
        op.f("ix_documents_publication_date"),
        "documents",
        ["publication_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_documents_update_date"), "documents", ["update_date"], unique=False
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=True),
        sa.Column("created_date", sa.DateTime(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_users_created_date"), "users", ["created_date"], unique=False
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(op.f("ix_users_last_login"), "users", ["last_login"], unique=False)
    op.create_table(
        "user_ratings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("document_id", sa.String(), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("modified_date", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["document_id"],
            ["documents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_user_ratings_document_id"),
        "user_ratings",
        ["document_id"],
        unique=False,
    )
    op.create_index(op.f("ix_user_ratings_id"), "user_ratings", ["id"], unique=False)
    op.create_index(
        op.f("ix_user_ratings_modified_date"),
        "user_ratings",
        ["modified_date"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_ratings_user_id"), "user_ratings", ["user_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_ratings_user_id"), table_name="user_ratings")
    op.drop_index(op.f("ix_user_ratings_modified_date"), table_name="user_ratings")
    op.drop_index(op.f("ix_user_ratings_id"), table_name="user_ratings")
    op.drop_index(op.f("ix_user_ratings_document_id"), table_name="user_ratings")
    op.drop_table("user_ratings")
    op.drop_index(op.f("ix_users_last_login"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_created_date"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_documents_update_date"), table_name="documents")
    op.drop_index(op.f("ix_documents_publication_date"), table_name="documents")
    op.drop_index(op.f("ix_documents_modified_date"), table_name="documents")
    op.drop_index(op.f("ix_documents_id"), table_name="documents")
    op.drop_table("documents")
    # ### end Alembic commands ###
