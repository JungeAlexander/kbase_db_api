name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8] # [3.8, 3.9]
        poetry-version: [1.1.5]

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}

    - name: View poetry --help
      run: poetry --help

    - name: Install dependencies
      shell: bash
      run: python -m poetry install --no-root

    - name: Environment variables
      env:
        DEV_ENV: ${{ secrets.DEV_ENV_FILE }}
      run: |
        echo "$DEV_ENV" | base64 --decode > source/db_api/aws.env
        # head -n 1 source/db_api/aws.env

    - name: Test with pytest
      run: |
        cd source
        python -m poetry run python -m pytest -v tests
